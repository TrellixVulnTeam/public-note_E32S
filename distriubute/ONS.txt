一 简介
    开放消息服务ONS(Open Notification Service)
    1.应用场景
        - 异步，生产者不需要等待消费者消费完成才返回。
        - 解耦，将生产者和消费者分开，消息的发送和接收交给ONS。
        - 最终一致，后端处理系统有一个掉线，无法处理消息，该系统重新上线后将会让该系统和其他系统达成一致状态。
        - 并行，消息是并行的被消费者处理的(消息被发到所有的消费者)。
    2.设计思路
        1).设计背景
            - 每台PC机都可能宕机，不可服务。
            - 任意集群都可能处理能力不足。
            - 最坏的情况一定会发生。
            - 内网的环境需要低延迟来提供最佳用户体验。也就是尽可能抑制消息传递的延迟。
        2).关键思路
            - 分布式集群化
                具备理论上无限的处理能力
                集群级别的高可用
            - 强数据安全
            - 海量数据堆积
            - 毫秒级投递延迟(传递延迟)
    3.关键概念
        1).topic
            消息的一级类型。相当于消息的类型。
        2).tag
            消息的二级类型。方便检索使用，是消息的二级类型。
        3).发送/订阅组
            主要是方便将producer和consumer集群化。producer和consumer的处理能力容易扩展。
    4.消息乱序
        1).产生原因
        2).有序队列的优势劣势
            优势：
                - 容易理解
                - 处理问题容易
            劣势：
                - 并行度瓶颈
                - 异常处理
        3).经验
    5.消息重复
    6.分布式事务与ONS