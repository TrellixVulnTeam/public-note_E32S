一、struts框架
	框架是整个或部分系统的可重用设计，表现为一组抽象构件以及构件实例交互的方法。
	struts2以webWork的设计思想为核心, 提供了一个整洁的MVC设计模式的实现web应用程序框架。
	优点
		1).非侵入式设计，struts的action类为POJO类，不依赖于servletAPI和strutsAPI。(POJO类，就是java原生类)
		2).提供了拦截器，拦截器可以进行AOP编程。(AOP编程：面向切面编程)
		3).提供了类型转换器，可以将特殊的请求参数转换成需要的类型。
		4).输入验证可以指定方法进行验证。
		5).提供了全局范围、包范围和Action范围的国际化资源文件管理实现。
		
二、核心jar包
	13个
	asm
	asm-commons
	asm-tree
	javassist			生成字节码代理的
	commons-fileupload	文件上传
	commons-io			文件上传依赖的jar包
	commons-lang		基本类型
	freemarker			ui模板
	log4j-api
	log4j-core			这两个是管理日志的
	ognl				对象图导航语言
	struts2				struts2核心jar包
	xwork-core			webwork的核心(struts2是webwork基础上建立的)
	
三、struts2开发流程
	1.<!-- 在web.xml中注册struts2启动项 -->
	  <filter>
		<filter-name>Struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	  </filter>
	  
	  <filter-mapping>
		<filter-name>Struts</filter-name>
		<url-pattern>/*</url-pattern>
	  </filter-mapping>
	
	2.添加类路径的xml
		在src文件夹中添加【struts.xml】，名字一定要对。可以在其中添加struts约束。		
		<?xml version="1.0" encoding="UTF-8"?>
			<!DOCTYPE struts PUBLIC
				"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
				"http://struts.apache.org/dtds/struts-2.3.dtd">
		<struts>
			....
		</struts>
		
	3.编写action
		
	4.注册action
		<package name="demo" namespace="/test" extends="struts-default">
			<action name="login" class="com.lsj.actions.LoginAction">
				<result name="success">/welcome.jsp</result>
			</action>
		</package>
		将action的uri和其class相互映射。这里的url是host/app/test/login.action
		并且指定执行完成后，返回的结果字符串将会跳到的页面。

四、struts2工作流程