一、简介
	1.Linux简介
		1.1版本
			1).内核版本
				Linux内核版本
			2).发行版本
				各大厂商在Linux内核的基础上开发了各具特色的APP套件.
			
		1.2常用发行版本
			ubuntu:只是图形界面比较优越，对于写服务器不够优秀.
			redhat:写服务器非常强大，但是有些服务收费.
			centos:和redhat差不多一样，但是所有服务全免费.(其实就是redHat系列的)
	2.开源软件简介
		可以看到软件源代码。Linux
		
	3.应用领域
		1).基于linux的企业服务器
		2).嵌入式应用
		
	4.Linux与Windows的不同
		1).严格区分大小写
		2).Linux中所有内容以文件形式保存，包括硬件
		3).Linux不靠扩展名区分文件类型
			不过有些常见的约定俗成的扩展名,
			压缩包		: *.gz
			二进制软件包: *.rpm
			网页文件	: *.html *.php
			脚本文件	: *.sh
			配置文件	: *.conf
			这些都不是强制的扩展名，而是方便我们自己区分。
		4).windows下的程序不能再Linux中直接安装和运行.
	
	5.虚拟机
		设置的硬盘是实际用了多少 才会占真机多少.
		网络适配器
			1).桥接模式
				虚拟机需要占真实机的IP，可以直接和真实机通信， 可以上网. 推荐桥接
			2).NAT模式
				利用VMnet1和真实机通信, 不能和局域网内其他设备通信，可以上网
			3).仅主机模式
				利用VMnet8和真实机通信, 不能和局域网内其他设备通信，不能上网
				
二、Linux安装
	1.分区
		磁盘分区是使用分区编辑器在磁盘上划分几个逻辑部分。碟片一旦划分成数个分区，不同类的目录和文件可以存储进不同的分区。
		主分区：最多只能有4个。这是由硬盘结构决定的。
		扩展分区：最多只能有1个。主分区加扩展分区最多有4个。不能写入数据，只能包含逻辑分区。这相当于是从主分区中拿了1个分区用来做扩展分区。
		逻辑分区：最多再划23个。（因为英文字母只有26个）
		根分区和swap分区是linux工作的两个重要分区.
		swap是内存置换空间，当主内存不够大时，会使用来自硬盘的swap空间(虚拟内存)。
	2.格式化
		目的是为了写入文件系统.在磁盘的特定区域写入特定数据，在分区中划出一片用于存放文件分配表、目录表等用于文件管理的磁盘空间。
		Linux的文件系统现在一般用EXT4.
	3.分区设备文件名
		/dev/hda1(IDE硬盘接口):IDE硬盘接口是老式的了，才100MB/s
		/dev/sda1(SCSI硬盘接口、SATA硬盘接口):SCSI是老式服务器接口，200MB/s. SATA3课得到500MB/s
		a代表第1个硬盘，1代表第一个分区。
		插入硬盘，linux自动会检查和配置这些设备文件名。有了设备文件名，就可以分配盘符了。
	4.挂载
		挂载就是给分区分配盘符的过程，挂载点就相当于盘符。
		linux的盘符不用CDEF等等，而是可以用任意字符串作盘符。
		挂载点就是某个目录和分区设备文件名挂在一起，该目录下的所有文件将保存在该分区设备中。
		必须分区:	/(根分区)
					swap分区(交换分区，分个8G就行了，实验环境下不超过2GB, 就是虚拟内存. 用硬盘空间当内存来使用)
		推荐分区:	/boot(启动分区, 200MB)
		需要注意的是，硬盘具体分区空间和目录结构是不一样的。
	5.BIOS
		真实机记得改BIOS中的启动顺序(BIOS)，因为是默认从硬盘启动，而硬盘是没有系统的，什么都无法启动。
		所以要改为光盘启动或是U盘启动，这个要看安装盘在哪里，安装完成后，再改成硬盘启动。
		但是虚拟机无所谓，因为虚拟机会发现硬盘若是没有系统会自动从光盘启动，比较智能。
	6.默认管理员为root.(我的密码就是qq密码)
	7.在划分分区时，当划分到第4个主分区，由于系统不确定用户是否还会继续分区，所以会讲第四个分区设置为扩展分区中的第1个逻辑分区。
	8.安装日志:
		/roott/install.log		:存储了安装在系统中的软件包及其版本信息
		/root/install.log.sylog	:存储了安装过程中留下的事件记录
		/root/anaconda-ks.cfg	:以kickstart配置文件的格式记录安装过程中设置的选项信息
	10.网络ip配置.
		1).查看网卡ip地址:ifconfig.
			网卡名一般默认为eth0, ifconfig会显示网卡的相关信息以及本机lo的相关信息
			若只显示指定网卡的信息，用ifconfig eth0.
			若网卡没有上网，则不会显示ip地址。这时候需要配置其ip地址，并启用配置，以上网。
		2).修改网卡ip地址:
			a).在红帽的linux中,可以使用setup，修改network的Device的配置.
			b).若是其他系统，要使用vi /etc/sysconfig/network-scripts/ifcifg-eth0，以配置该文件.
				将ONBOOT=yes,即系统启动便激活网卡(网卡未激活怎么都上不了网的)
				添加IPADDR=xxxx.xxxx.xxxx.xxxx
					NETMASK=xxxx.xxxx.xxxx.xxxx
					GETWAY=xxxx.xxxx.xxxx.xxxx
		3).修改完成后，需要新启动网络，以使用新配置:service network restart.

三、常用命令.
	1.命令基本格式
		1).命令提示符
			[root@localhost ~]# command.
			root		:当前登录用户名
			localhost	:当前主机名
			~			:当前所在目录(家目录, 家目录就是开机的时候的目录。 超级用户的家目录是/root, 普通用户的家目录是/home/uers)
			#			:超级用户的提示符.(普通用户的提示符是$)
		2).命令格式
			命令 [选项] [参数]
			注意，个别命令不是此格式。当多个选项时，可以卸载一起.
	2.文件处理命令
		1).目录处理命令
			a).ls [选项] [文件或目录]	查询目录中的内容
				-a 显示所有文件，包括隐藏文件.
				-l 显示文件的详细信息.
				详细信息:
					文件权限 文件链接点 所有者 所属组 字节大小 最后一次修改时间 文件名
					文件权限:(r读 w写 x执行)
						第一组:1个符号组成，文件类型(-文件 d目录 I软连接文件)
						第二组:3个符号组成，所有者
						第三组:3个符号组成，所属组
						第四组:3个符号组成，其他人
					注意: .开头文件是隐藏文件
				简化:ll = ls -l
			b).mkdir -p [目录名] 建立目录
				-p递归创建. 为了创建多级目录. 如 mkdir -p a/b/c. 若不加-p，只会在a/b/存在的情况下创建.
			c).cd [目录] 切换目录
				cd ~ 或 cd 竟然当前用户的家目录
				cd - 进入上次所在目录
				cd .. 进入上机目录
				
				相对路径:参照当前所在目录，进行查找. 由..打头的路径
				绝对路径:从根目录开始制定，一级一级递归查找。在任何目录下，都能竟然制定位置
			d).pwd  显示当前所在路径
			e).rmdir [路径] 删除空目录, 由于只能删除空目录，所以用的比较少
			f).rm -rf [文件或目录]
				rm 只能删除文件，不能删除目录
				rm -r 就可以删除目录了
				-rf 是强制删除，linux不再提醒是否删除
			g).cp [选项] [源文件或目录] [目标目录]
				-r 复制目录, 不加则是复制文件
				-a 全名复制，包括文件属性.(否则其他属性会不一样，比如修改时间)
				若在目标目录中指定了文件名，则复制后以新文件名命名
			h).mv [源文件或目录] [目标目录] 剪切
				mv剪切目录和文件都行
				若在目标目录中指定了文件名，则复制后以新文件名命名
				若目标文件和源目录是同一目录，那就是重命名
			i).cat 文件. 表示查看文件
			j).chmod 权限修改
				-R 递归修改， 将指定文件夹中的所有子文件的权限修改.
				权限为rwx代表的10进制数。
		2).链接命令
			ln -s [源文件] [目标文件] 将源文件生成链接文件
				-s 创建软连接
			下面说的I节点是linux中每个分区每个文件都有的一个标识。
			硬链接:（一个文件的两个不同的接入点）
				拥有相同的i节点和存储block块，可以看做是同一个文件
				可通过i节点识别
				不能跨分区
				不能针对目录使用
			软链接: （类似windows的快捷方式）
				软链接有自己的I节点和block块，但是数据快中值保存了源文件的文件名和I节点号，并没其他数据。
				软链接一定要写绝对路径!
	3.常见目录作用:
		1). /bin /sbin 和 /usr/bin /usr/sbin都是用来保存系统命令的.前者是root的命令，后者仅仅是普通用户的命令
		2). /boot/ 启动目录，用来保存系统的启动命令.
		3). /dev/ 特殊文件保存目录，很多硬件文件.
		4). /etc/ 系统的配置文件.
		5). /lib/ linux的函数库文件.
		6). /media/ /mnt/ /misc/ 都是空目录，这些都是外接存储设备的挂载点.
		7). /proc/ /sys/ 不能直接操作，保存的是内存的过载点. 是用于内存的挂载点.
		8). /tmp/ 临时目录
		9). /usr/ 是系统资源目录
		10). /var/ 保存系统可变文档的目录
	4.文件搜索命令:
		1). locate.  文件搜索命令
			比find命令快
			locate 文件名
			locate并非直接搜索，而是在/var/lib/mlocate这个数据库中搜索, 但是该数据库并非实时更新，而是每天更新一次。
			需要更新该数据库时，要用updatedb指令.
		2). whereis和which
			a). whereis 命令名 所搜命令所在路径及帮助文档所在位置,只能查找系统命令, 别名找不到
				-b: 只查找可执行文件
				-m: 只查找帮助文件
			b). which 命令名 可以查找对应的命令所在位置,包括别名
			环境变量.
			其实命令就是可执行程序，要使用命令，就要使用程序的路径，但是路径或许会很长，这样敲命令就很不方便，这样就可以使用环境变量。
			echo $PATH.
			环境变量就是shell执行程序时，在哪些路径下去找。所以一般自己写的程序得写路径。
		3). find.  文件搜索命令
			(1)
			find [搜索范围] [搜索条件], 搜索指定路径下的所有子路径中的文件。
			应该避免范围过大，否则会非常耗费系统资源
			可以使用通配符
				* 匹配任意内容
				/ 匹配任意一个字符
				[]匹配任意一个中括号内的字符
				a).find /root -name "文件名"
				b).find /rot -iname "文件名", 不区分大小写的搜索。
				c).find /root -user root, 按照所有者搜索
				d).find /root -nouser root, 搜索指定范围内没有所有者的文件(没有所有者的文件就是垃圾文件)
				e).find /var/log/ -mtime +10. 查找10天前在/var/log/路径下修改了文件内容的文件
					-10 10天内	-atime 文件访问时间
					10  10当天	-ctime 改变文件属性
					+10 10天前  -mtime 修改文件内容
				f).find . -size 25k  查找当前目录下大小是25k的文件(.代表当前目录)
					+25k 大于25k
					-25k 小于25k
				g). find /root -inum 10000 在/root/下寻找ID是10000的文件
			(2)
			条件逻辑运算:
				-a and
				-o or
			如 find /root -size +20k -a -size -50k	查找大于20K 小于50K的文件
			(3)
				命令1 -exec/-ok 命令 {}\; 对命令1的结果执行命令2的操作, {}就是代表的命令1的执行结果
				-exec ls -lh {} \;
		4). gerp 字符串搜索命令 在指定的文件当中搜索符合条件的字符串
			grep "string" 文件名, 这样就会在指定文件中搜索包含string的行
			grep -v ..., 搜索不包含"string"的行
	5.帮助命令
		1).man
			man 命令名称	进入man page环境，并显示指定命令的帮助
			在man page环境下，空格向下翻，q退出
			man -f 命令，告知命令的帮助级别
			man level 命令 显示命令level等级的帮助, 否则默认显示最小等级的帮助
		2).help
			命令 --help, 可以显示中文帮助
			help shell内部命令, 获取shell内部命令的帮助.(shell就是壳，我们的字符界面就是shell)
		3).info
			info 命令
	6.压缩命令
		常用压缩格式: *.zip, *.gz, *.bz2, *.tar.gz, *.tar.bz2
		1). zip
			a).zip 压缩文件名 源文件	,压缩文件, 可压缩目录
			b).unzip 压缩文件名		,解压文件
		2).	gz, linux专用的，但是windows中也可以实现解压缩.
			a).gzip 源文件 将源文件压缩为源.gz格式，但是源文件虎啸式
			b).gzip -c 源文件 > 压缩文件名		,源文件不消失(>这个意思是将结果赋给某个文件)
			c).gzip -r 目录		,压缩目录下所有子文件，但是不能压缩目录
			d).gunzip 压缩文件	,解压缩指定文件
		3). bz2	,这个不能压缩目录
			a).bzip2 源文件		,不保留源文件.
			b).bzip2 -k 源文件	,保留源文件
			c).bunzip2 源文件	,解压 不保留源文件. -k则会保留源文件
		4). tar.gz 主要用于压缩目录, 是先将目录打包为.tar,再压缩为.gz
			a).tar -cvf 打包文件名 源文件,	打包文件
				-c 打包， -v 显示过程， -f 指定打包后的文件名
			b).tar -xvf 打包文件名		,解打包
			c).tar -zcvf 压缩包名.tar.bz2 源文件	,直接打包为.tar.gz
			   tar -zxvf 压缩包名.tar.bz2			,直接解压
			   
			d).tar -jcvf 压缩包名.tar.bz2 源文件	,直接打包为.tar.bz2
			   tar -jxvf 压缩包名.tar.bz2 源文件	,直接解压
			e).tar -ztvf 压缩包文件名.	测试压缩包文件，即看里面的内容
			要压缩多个源文件到一个压缩包里面，只需要在源文件出写入多个源文件 并以空格区分即可。
	7.关机和重启命令
		1).shutdown
			shutdown [选项] 时间
				-c 取消前一个关机命令
				-h 关机
				-r 重启
			在启动关机或重启后，计算机会停顿，直达关机。若是想后台等待，则在最后加后台符 &
			服务器远程重启就够了，不然关机后还得人去开机，好麻烦。
			shutdown 会正确保存系统的配置，变量等等。
		2).halt			关机
		3).poweroff		关机
		4).init 0		关机
		5).reboot		重启	安全
		6).init 6		重启
		
		2/3/4都不及shutdown安全，不会在关机前进行配置
		
		系统运行级别:	0 关机,1 单用户(相当于windows的安全模式), 2 不完全用户(字符界面, 不含NFS服务), 3 完全多用户(字符界面), 4 未分配, 5 图形界面, 6 重启
		7). runlevel, 查看系统当前的级别
		8). 远程登录的用户，一定要注销掉，否则服务器会一直认为用户在。
			logout 注销当前用户(服务器自己执行，会注销服。若是远程客户，会注销用户退出登录)
	8.其他常用命令
		1).挂载命令
			a).mount 查询系统中已经挂载的设备
			b).mount -a 	,将/etc/fstab写入的文件自动挂载
			c).mount [-t 文件系统] [-o 特殊选项] 设备文件名 挂载点.		,给某个设备设置挂载点
				-t 文件系统: 若设备是光盘，文件系统必须是iso9660
				-o 特殊选项: 可以指定挂载的额外选项(可以重新挂载，哥哥额外选项之间可以同时存在，用逗号隔开)
				如 mount -o remount,noexec /home/
			
			挂载方法:
				(1).设备插入(插入光盘， 或者插入U盘).
				(2).创建挂载点, mkdir 挂载点.
				(3).设置挂载点, mount /dev/sr0 /mnt/cdrom.
				(4).卸载命令, umount 设备文件名或挂载点.
			存储设备文件名，就代表了存储设备，但是这个存储设备的具体内容，需要挂载到某个目录后，该存储设备里面的内容才能显示出来。
			
			光盘设备文件名	:/dev/sr0
			U盘设备文件名	:需要用fdisk来查看.
			
			e).fdisk -l查看已启用的硬盘
		2).用户登录窗口和用户交互命令
			a). w 查看用户登录信息(远程登录服务器的用户和进入服务器本身的用户)
				USER:登录的用户名
				TTY	:登录终端
				FROM:从那个ip地址登陆
				LOGIN@:登录的时间
				IDLE:用户闲置的时间
				JCPU:该终端连接的所有进程占用的时间，不包括过去后台作业时间，但包括当前正在运行的后台作业所占时间
				PCPU:当前经常所占用的时间
				WHAT:当前运行的命令
			b). who 和w差不多，但不能看用户的性能
			c). last 查看当前登录和过去登录的用户信息
				last 默认读取的是/var/log/wtmp文件的数据
			d). lastlog 查看所有用户的最后一次登录信息
四、shell
	1.概述
		shell就是一个命令行解释器，为用户提供了一个像linux内核发送请求一遍运行程序的界面系统级程序。
		shell还是一个功能强大的编程语言, 可以自己写我们的shell程序。
		shell主要有两种语法Bourne和C，彼此不兼容.
		Bourne家族有:sh, ksh, Bash, psh. 其中linux主要用的shell就是bash
		C家族主要包括:csh, tcsh
		/etc/shells 中保存了linux兼容的shell
	2.bash基本功能
		1).命令别名
			命令别名==人的小名
			a).alias, 查看系统中已经生效的别名
			b).alias 别名='指令', 就可以设定别名,	这样的设定只会临时生效，重登陆就回丧失作用
			c).vi ~/.bashrc 将别名写入环境变量配置文件, 就可以一直使用别名了
		2).快捷键
			a).ctrl+C 强制终止
			b).ctrl+L 清屏(clear命令)
			c).crtl+U 从光标所在删到行首
			d).ctrl+a 光标移动到行首
			e).ctrl+e 光标移动到行尾
			f).ctrl+z 把命令放入后台
			g).ctrl+r 在历史命令中搜索
		3).历史命令
			history [选项] [历史命令保存文件]
				-c 情况历史命令
				-w 把缓存中的历史命令写入历史命令保存文件~/.bash_history(每个用户的家目录不一样，所以不同用户保存的历史命令文件是不一样的)
				(用户退出时，系统会自动-w, 将历史命令同步至.bash_history)
			历史命令默认保存1000条。可以在/etc/profile中修改
			!n		执行历史命令中的第n条命令
			!!		执行上一条命令
			!字串	执行最后一条以该字串开头的命令
			按两次tab可以搜索对应的命令或文件
		4).输入输出重定向
			键盘文件描述符  0: 标准输入
			显示器文件描述符1: 标准输出
			显示器文件描述符2: 标准错误输出
			(1).标准输出重定向:(把屏幕的内容，输出到文件中)
				a).命令 > 文件	,以覆盖的方式，把命令正确输出到指定的文件或设备当中
				b).命令 >>文件	,以追加的方式，把命令正确的输出到指定的文件或设备当中(以前的东西不覆盖)
			(2).标准错误输出重定向
				命令 2> 文件	,记录报错信息到文件中
				命令 2>> 文件
			(3).正确和错误的输出同时重定向
				命令 > 文件 2>&1
				命令 >> 文件 2>&1
				命令 &> 文件
				命令 &>> 文件
				命令>>正确日志 2>>错误日志
			命令 &>/dev/null	,这个可以屏蔽屏幕显示，丢给null的数据，会完全丢失
			
			(4).输入重定向
				wc [选项] [文件名]	统计键盘输入的情况, 或是统计指定文件中的内容
					-c 统计字节数
					-w 统计单词数
					-l 统计行数
				wc < 文件名		统计文件的内容
				wc << 标识		统计两个标识间的输入内容
		5).多命令顺序执行
			(1) ; ， 命令1;命令2	, 多个命令顺序执行，命令之间没有任何逻辑联系
			(2)	&& , 命令1&&命令2	, 命令1正确执行，则命令2执行，否则命令2不执行
			(3) || , 命令1||命令2	, 命令1正确执行，则命令2不执行，否则命令2执行
		6).管道符
			命令1 | 命令2, 命令1的输出结果，作为命令2的操作对象(通常命令2的输入是个文件, 这个命令相当于把命令1的结果保存临时文件中，命令2操作临时文件)
		7).通配符
			?	匹配一个任意字符
			*	匹配0个或任意多个任意字符
			[]	匹配括号中任意一个字符
			[-]	匹配指定范围中的任意一个字符
			[^] 匹配不是指定范围中的任意一个字符
		8).其他符号
			$, 用于调用变量里面的值
			'', 单引号中，特殊符号都没特殊含义，都是字符.
			"", 双引号中，特殊符号仍然可以使用.
			``和$(), 把命令执行，再把命令的结果赋给变量
			\, 转义符，让特殊符号是去作用，或者让普通符号具有特殊作用
	3.脚本执行方式
		1).echo [选项] [输出内容] ,将指定内容输出到屏幕上。
		若要支持转义符和颜色显示，则选项要加-e
		如 echo -e "hello\nworld"
		
		2).#后面的内容不生效,代表注释
			#!/bin/bash	是标识该脚本语言是shell脚本
		
		3).运行脚本
			a).基本方法
				赋予执行权限 chmod 755 scriptName.sh
				执行 ./scriptName.sh
			b).bash方法
				bash ./scriptName.sh
				(不用赋予执行权限)
	4.shell
		1).
			
五、软件安装
	1.软件包
		windows的软件包不能再linux中使用
		1).源代码包， 里面只有源代码
		2).二进制包(RPM包、系统默认包)
	2.rpm命令
		安装好的记录都放在/var/lib/rpm中
		包全名：操作的包是没有安装的软件包，则需要使用包全名。
		包名：操作的已经安装的软件包时，使用包名。(比如卸载)
		a).rpm -ivh 包全名
			-i 安装
			-v 显示详细信息
			-h 显示进度
		b).rpm -Uvh 包全名
			-U 升级
		c).rpm -e 包名
			-e 卸载
		d).rpm -q 包名	,可以查询是否安装该包
			-q 查询
			-qa 查询所有的安装的rmp包
			-qi 查询软件包的详细信息(已安装的)
			-qip 查询软件包的详细信息(包括未安装)
			-ql	 查询软件包中的文件的安装位置
			-qf 文件名 ,查询某个文件属于哪个包
		e).rpm -V 包名 , 校验已安装的软件包是否是被修改过
		f).rpm2cpio 包全名 | cpio -idv .文件绝对路径
	3.yum在线管理
		yum装的就是rpm管理，是rpm的在线安装方法，可以简化安装.将所有软件包放到官方服务器上，当进行yum在线安装时，可以自动解决依赖性问题.
		yum源文件: /etc/yum.repos.d/,	yum下载的源
			[base] 		容器名称，
			name		容器说明该，可以随便写
			mirrorlist	镜像站点， baseurl禁止时，就是使用mirrorlist
			baseurl		yum的url, yum源文件
			enable		标识是否生效，1生效，0不生效(默认为1)
			gpgcheck	是否用数字证书验证(1验证， 0不验证)
			gpgkey
		搭建本地光盘yum源:(这样就可以将光盘弄成yum源了，就不用联网了，可以用这个方法来安装光盘中的rpm)
			1).光盘挂载
			2).网络yum失效(把CentOS-Base.repo改个名就可以了)
			3).启动光盘yum源(修改CentOS-Media.repo中的baseurl和enable,注释多余的baseurl,否则会错)
			4).使用yum list, 查看yum源中有哪些包, 能找到，就ok啦
		yum search 关键字	,搜索关键字相关的安装包
		yum install 包名	,用包名就可以啦。
			-y 自动回答yes
		yum -y update 包名	,升级
		yum -y remove 包名	,卸载
		yum grouplist 查看已经安装的组