package BasicSocket;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketAddress;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.Enumeration;

public class Main {
	
	public static void Test1() throws Exception{
		Enumeration<NetworkInterface> interfaceList = NetworkInterface.getNetworkInterfaces();
		
		if(interfaceList == null){
			System.out.println("--No interfaces found--");
		}else{
			while(interfaceList.hasMoreElements()){
				NetworkInterface iface = interfaceList.nextElement();
				System.out.println("Interface " + iface.getName() + ":");
				Enumeration<InetAddress> addrList = iface.getInetAddresses();
				if(addrList == null){
					System.out.println("\t(No addresses for this interface)");
				}
				while(addrList.hasMoreElements()){
					InetAddress address = addrList.nextElement();
					System.out.println("\tAddress " + address.getHostAddress());
				}
			}
		}
	}
	
	public static void Test2(String[] args) throws Exception{
		for(String host : args){
			System.out.println(host + ":");
			InetAddress[] addressList = InetAddress.getAllByName(host);
			for(InetAddress address : addressList){
				System.out.println("\t"+address.toString()+"|"+address.getHostName()+"/"+address.getHostAddress());
			}
		}		
	}
	
	public static void TcpClient() throws Exception{
		Socket socket = new Socket();
		
		InputStream in = socket.getInputStream();
		OutputStream out = socket.getOutputStream();
		
		socket.close();
	}
	
	public static void TcpServer() throws Exception{
		ServerSocket servSock = new ServerSocket(1020);
		
		while(true){
			Socket clntSock  = servSock.accept();
			
			SocketAddress clientAddress = clntSock.getRemoteSocketAddress();
			System.out.println("Handling client at : " + clientAddress);
			InputStream in = clntSock.getInputStream();
			OutputStream out = clntSock.getOutputStream();
			byte[] receive = new byte[1024];
			int recSize = 0;
			while((recSize = in.read(receive)) != -1){
				out.write(receive, 0, recSize);
			}
			System.out.println(clientAddress+" close");
			clntSock.close();
		}
	}
	
	public static void main(String[] args) throws Exception{
		//Test1();
		//Test2(new String[]{"localhost", "www.baidu.com"});
		
		TcpClient();
		//TcpServer();
		System.out.println("Main Done");
	}
}
